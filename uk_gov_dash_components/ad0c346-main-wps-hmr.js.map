{"version":3,"sources":["webpack:///./src/lib/components/ExpandableMenuItem.react.js"],"names":["ExpandableMenuItem","props","defaultProps","collapsedByDefault","propTypes","id","PropTypes","string","title","bool","setProps","func","children","node"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;AACvC,sBACI,2DAAC,8DAAD,EAAmBA,KAAnB,CADJ;AAGH,CAJD;AAMA;AACA;AACA;AACA;;;AAEAD,kBAAkB,CAACE,YAAnB,GAAkC;AAC9BC,oBAAkB,EAAE;AADU,CAAlC;AAIAH,kBAAkB,CAACI,SAAnB,GAA+B;AAC3B;AACJ;AACA;AACA;AACA;AACIC,IAAE,EAAEC,iDAAS,CAACC,MANa;;AAO3B;AACJ;AACA;AACIC,OAAK,EAAEF,iDAAS,CAACC,MAVU;;AAW3B;AACJ;AACA;AACIJ,oBAAkB,EAAEG,iDAAS,CAACG,IAdH;;AAe3B;AACJ;AACA;AACIC,UAAQ,EAAEJ,iDAAS,CAACK,IAlBO;;AAmB3B;AACJ;AACA;AACIC,UAAQ,EAAEN,iDAAS,CAACO;AAtBO,CAA/B;AAyBO,IAAMX,YAAY,GAAGF,kBAAkB,CAACE,YAAxC;AACA,IAAME,SAAS,GAAGJ,kBAAkB,CAACI,SAArC;AAEQJ,iFAAf,E","file":"ad0c346-main-wps-hmr.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ExpandableMenuItem as RealComponent } from '../LazyLoader';\r\n\r\n/**\r\n * Lazy loaded ExpandableMenuItem\r\n *\r\n * @param {\r\n * \tid,\r\n *  title,\r\n *  collapsedByDefault,\r\n *  children,\r\n * } [props={}]\r\n * @return {*}\r\n */\r\nconst ExpandableMenuItem = (props = {}) => {\r\n    return (\r\n        <RealComponent {...props} />\r\n    );\r\n}\r\n\r\n/**\r\n * PropTypes is a part of React, see full documenation below.\r\n * https://reactjs.org/docs/typechecking-with-proptypes.html\r\n */\r\n\r\nExpandableMenuItem.defaultProps = {\r\n    collapsedByDefault: true,    \r\n};\r\n\r\nExpandableMenuItem.propTypes = {\r\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\r\n    id: PropTypes.string,\r\n    /**\r\n     * The clickable text to display sub-menu\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * Default behaviour of whether or not the sub-menu is collapsed on load\r\n     */\r\n    collapsedByDefault: PropTypes.bool,\r\n    /**\r\n     * Dash-assigned callback that gets fired when the value changes.\r\n     */\r\n    setProps: PropTypes.func,\r\n    /**\r\n     * An array of li HTML elements that will displayed on click\r\n     */\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport const defaultProps = ExpandableMenuItem.defaultProps;\r\nexport const propTypes = ExpandableMenuItem.propTypes;\r\n\r\nexport default ExpandableMenuItem"],"sourceRoot":""}