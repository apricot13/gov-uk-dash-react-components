{"version":3,"sources":["webpack:///./src/lib/fragments/ComboBox.react.js"],"names":["ComboBox","props","useFilter","sensitivity","contains","state","useComboBoxState","defaultFilter","buttonRef","useRef","inputRef","listBoxRef","popoverRef","useComboBox","triggerProps","buttonProps","inputProps","listBoxProps","labelProps","useButton","display","flexDirection","label","position","height","marginLeft","background","border","right","top","padding","isOpen","close","propTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;CAIA;;AACA;AACA;;AAEA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACxB;AACA,mBAAqBC,kEAAS,CAAC;AAAEC,eAAW,EAAE;AAAf,GAAD,CAA9B;AAAA,MAAQC,QAAR,cAAQA,QAAR;;AACA,MAAMC,KAAK,GAAGC,gFAAgB,iCAAML,KAAN;AAAaM,iBAAa,EAAEH;AAA5B,KAA9B,CAHwB,CAKxB;;AACA,MAAMI,SAAS,GAAGC,oDAAM,CAAC,IAAD,CAAxB;AACA,MAAMC,QAAQ,GAAID,oDAAM,CAAC,IAAD,CAAxB;AACA,MAAME,UAAU,GAAGF,oDAAM,CAAC,IAAD,CAAzB;AACA,MAAMG,UAAU,GAAGH,oDAAM,CAAC,IAAD,CAAzB;;AAEA,qBACCI,wEAAW,iCAENZ,KAFM;AAGTS,YAAQ,EAARA,QAHS;AAITF,aAAS,EAATA,SAJS;AAKTG,cAAU,EAAVA,UALS;AAMTC,cAAU,EAAVA;AANS,MAQVP,KARU,CADZ;AAAA,MAAqBS,YAArB,gBAAQC,WAAR;AAAA,MAAmCC,UAAnC,gBAAmCA,UAAnC;AAAA,MAA+CC,YAA/C,gBAA+CA,YAA/C;AAAA,MAA6DC,UAA7D,gBAA6DA,UAA7D,CAXwB,CAuBxB;AACA;AACA;;;AACA,mBAAwBC,oEAAS,CAACL,YAAD,EAAeN,SAAf,CAAjC;AAAA,MAAQO,WAAR,cAAQA,WAAR;;AAEA,sBACC;AAAK,SAAK,EAAE;AAAEK,aAAO,EAAE,aAAX;AAA0BC,mBAAa,EAAE;AAAzC;AAAZ,kBACC;AAAO,aAAS,EAAC;AAAjB,KAAmCH,UAAnC,GAAgDjB,KAAK,CAACqB,KAAtD,CADD,eAEC;AAAK,SAAK,EAAE;AAAEC,cAAQ,EAAE,UAAZ;AAAwBH,aAAO,EAAE;AAAjC;AAAZ,kBACC,iFACKL,WADL,EAEKC,UAFL;AAGC,OAAG,EAAEN,QAHN;AAIC,aAAS,EAAC;AAJX,KADD,eAQC,kFACKK,WADL;AAEC,OAAG,EAAEP,SAFN;AAGC,SAAK,EAAE;AACNgB,YAAM,EAAE,EADF;AAENC,gBAAU,EAAE,CAFN;AAGNC,gBAAU,EAAE,aAHN;AAINC,YAAM,EAAE,aAJF;AAKNC,WAAK,EAAE,CALD;AAMNL,cAAQ,EAAE,UANJ;AAONM,SAAG,EAAE;AAPC;AAHR,mBAaC;AACC,mBAAY,MADb;AAEC,SAAK,EAAE;AAAEC,aAAO,EAAE;AAAX;AAFR,cAbD,CARD,EA4BEzB,KAAK,CAAC0B,MAAN,iBAEC,2DAAC,oEAAD;AACC,cAAU,EAAEnB,UADb;AAEC,UAAM,EAAEP,KAAK,CAAC0B,MAFf;AAGC,WAAO,EAAE1B,KAAK,CAAC2B;AAHhB,kBAKC,2DAAC,oEAAD,eACKf,YADL;AAEC,cAAU,EAAEN,UAFb;AAGC,SAAK,EAAEN;AAHR,KALD,CA9BH,CAFD,CADD;AAgDA;;AACDL,QAAQ,CAACiC,SAAT,GAAqBA,uEAArB;AAEejC,uEAAf,E","file":"4e72832-main-wps-hmr.js","sourcesContent":["import { useButton } from '@react-aria/button';\nimport { useComboBoxState } from '@react-stately/combobox';\nimport { useComboBox } from '@react-aria/combobox';\nimport { useFilter } from '@react-aria/i18n';\nimport { propTypes } from '../components/ui/ComboBox.react';\n\nimport './combobox.css';\n\nimport React, { useRef } from 'react';\n\n// Reuse the ListBox and Popover from your component library.See below for details.\nimport { ListBox } from '../components/ui/ListBox.react';\nimport { Popover } from '../components/ui/Popover.react';\n\nfunction ComboBox(props) {\n\t// Setup filter function and state.\n\tconst { contains } = useFilter({ sensitivity: 'base' });\n\tconst state = useComboBoxState({ ...props, defaultFilter: contains });\n\n\t// Setup refs and get props for child elements.\n\tconst buttonRef = useRef(null);\n\tconst inputRef =  useRef(null);\n\tconst listBoxRef = useRef(null);\n\tconst popoverRef = useRef(null);\n\n\tconst { buttonProps: triggerProps, inputProps, listBoxProps, labelProps } =\n\t\tuseComboBox(\n\t\t\t{\n\t\t\t\t...props,\n\t\t\t\tinputRef,\n\t\t\t\tbuttonRef,\n\t\t\t\tlistBoxRef,\n\t\t\t\tpopoverRef\n\t\t\t},\n\t\t\tstate\n\t\t);\n\n\t// Call useButton to get props for the button element. Alternatively, you can\n\t// pass the triggerProps to a separate Button component using useButton\n\t// that you might already have in your component library.\n\tconst { buttonProps } = useButton(triggerProps, buttonRef);\n\n\treturn (\n\t\t<div style={{ display: 'inline-flex', flexDirection: 'column' }}>\n\t\t\t<label className=\"govuk-label\" {...labelProps}>{props.label}</label>\n\t\t\t<div style={{ position: 'relative', display: 'inline-block' }}>\n\t\t\t\t<input\n\t\t\t\t\t{...buttonProps}\n\t\t\t\t\t{...inputProps}\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tclassName=\"dluhc-combobox\"\n\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\t{...buttonProps}\n\t\t\t\t\tref={buttonRef}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight: 24,\n\t\t\t\t\t\tmarginLeft: 0,\n\t\t\t\t\t\tbackground: \"transparent\",\n\t\t\t\t\t\tborder: \"transparent\",\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: \"8px\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<span\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\tstyle={{ padding: '0 2px' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tâ–¼\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t\t{state.isOpen &&\n\t\t\t\t\t(\n\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\tpopoverRef={popoverRef}\n\t\t\t\t\t\t\tisOpen={state.isOpen}\n\t\t\t\t\t\t\tonClose={state.close}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListBox\n\t\t\t\t\t\t\t\t{...listBoxProps}\n\t\t\t\t\t\t\t\tlistBoxRef={listBoxRef}\n\t\t\t\t\t\t\t\tstate={state}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Popover>\n\t\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nComboBox.propTypes = propTypes;\n\nexport default ComboBox;\n"],"sourceRoot":""}