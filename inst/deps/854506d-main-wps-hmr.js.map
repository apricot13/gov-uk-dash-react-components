{"version":3,"sources":["webpack:///./src/lib/components/AutoComplete.react.js"],"names":["AutoComplete","props","defaultProps","autoselect","cssNamespace","value","displayMenu","minLength","name","placeholder","onConfirm","confirmOnBlur","showNoOptionsFound","showAllValues","required","tNoResults","tAssistiveHint","dropdownArrow","DropdownArrowDown","alwaysDisplayArrow","propTypes","id","PropTypes","string","bool","number","func","source","any","templates","tStatusQueryTooShort","tStatusNoResults","tStatusSelectedOption","tStatusResults","selectElement","setProps","ariaLabelledBy","wrapperRef"],"mappings":"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","file":"854506d-main-wps-hmr.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AutoComplete as RealComponent } from '../LazyLoader';\nimport DropdownArrowDown from './dropdownArrowDown.react';\n\n/**\n * Lazy loaded Autocomplete\n *\n * @param {\n * \tid,\n * \tautoselect,\n * \tcssNamespace,\n * \tdefaultValue,\n * \tdisplayMenu,\n * \tminLength,\n * \tname,\n * \tplaceholder,\n * \tonConfirm,\n * \tconfirmOnBlur,\n * \tshowNoOptionsFound,\n * \tshowAllValues,\n * \trequired,\n * \ttNoResults,\n * \ttAssistiveHint,\n * \tsource,\n * \ttemplates,\n * \tdropdownArrow: dropdownArrowFactory,\n * \ttStatusQueryTooShort,\n * \ttStatusNoResults,\n * \ttStatusSelectedOption,\n * \ttStatusResults,\n * } [props={}]\n * @return {*}\n */\nconst AutoComplete = (props = {}) => {\n\treturn (\n\t\t\t<RealComponent {...props} />\n\t);\n}\n\nexport default AutoComplete\n\nAutoComplete.defaultProps = {\n\tautoselect: false,\n\tcssNamespace: 'autocomplete',\n\tvalue: '',\n\tdisplayMenu: 'inline',\n\tminLength: 0,\n\tname: 'input-autocomplete',\n\tplaceholder: '',\n\tonConfirm: () => { },\n\tconfirmOnBlur: true,\n\tshowNoOptionsFound: true,\n\tshowAllValues: false,\n\trequired: false,\n\ttNoResults: () => 'No results found',\n\ttAssistiveHint: () => 'When autocomplete results are available use up and down arrows to review and enter to select.  Touch device users, explore by touch or with swipe gestures.',\n\tdropdownArrow: DropdownArrowDown,\n\talwaysDisplayArrow: true,\n};\n\nAutoComplete.propTypes = {\n\t/**\n\t * The ID used to identify this component in Dash callbacks.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Should auto select\n\t */\n\tautoselect: PropTypes.bool,\n\t/**\n\t * cssNamespace\n\t */\n\tcssNamespace: PropTypes.string,\n\t/**\n\t * No Description\n\t */\n\tdisplayMenu: PropTypes.string,\n\t/**\n\t * No Description\n\t */\n\tminLength: PropTypes.number,\n\t/**\n\t * No Description\n\t */\n\tname: PropTypes.string,\n\t/**\n\t * No Description\n\t */\n\tplaceholder: PropTypes.string,\n\t/**\n\t * No Description\n\t */\n\tonConfirm: PropTypes.func,\n\t/**\n\t * No Description\n\t */\n\tconfirmOnBlur: PropTypes.bool,\n\t/**\n\t * No Description\n\t */\n\tshowNoOptionsFound: PropTypes.bool,\n\t/**\n\t * No Description\n\t */\n\tshowAllValues: PropTypes.bool,\n\t/**\n\t * No Description\n\t */\n\trequired: PropTypes.bool,\n\t/**\n\t * No Description\n\t */\n\ttNoResults: PropTypes.func,\n\t/**\n\t * No Description\n\t */\n\ttAssistiveHint: PropTypes.func,\n\t/**\n\t * No Description\n\t */\n\tsource: PropTypes.any,\n\t/**\n\t * No Description\n\t */\n\ttemplates: PropTypes.any,\n\t/**\n\t * No Description\n\t */\n\ttStatusQueryTooShort: PropTypes.func,\n\t/**\n\t * No Description\n\t */\n\ttStatusNoResults: PropTypes.any,\n\t/**\n\t * No Description\n\t */\n\ttStatusSelectedOption: PropTypes.func,\n\t/**\n\t * No Description\n\t */\n\ttStatusResults: PropTypes.any,\n\n\t/**\n\t * React component for dropdown arrow\n\t */\n\tdropdownArrow: PropTypes.any,\n\n\t/**\n\t * Accessible element\n\t */\n\tselectElement: PropTypes.any,\n\n\t/**\n\t * The value displayed in the input.\n\t */\n\tvalue: PropTypes.string,\n\n\t/**\n\t\t * Dash-assigned callback that should be called to report property changes\n\t\t * to Dash, to make them available for callbacks.\n\t\t */\n\tsetProps: PropTypes.func,\n\n\t/**\n\t * This is the ID for the label field\n\t */\n\tariaLabelledBy: PropTypes.string,\n\n\t/**\n\t * alwaysDisplayArrow\n\t */\n\talwaysDisplayArrow: PropTypes.bool,\n\n\t/**\n\t * wrapperRef\n\t */\n\twrapperRef: PropTypes.any\n};\n\n\nexport const defaultProps = AutoComplete.defaultProps;\nexport const propTypes = AutoComplete.propTypes;"],"sourceRoot":""}